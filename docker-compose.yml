services:
  mqtt:
    image: eclipse-mosquitto:2
    container_name: mqtt-broker
    restart: unless-stopped
    environment:
      - TZ=${TZ}
    ports:
      - "${MQTT_PORT}:1883"
      - "${MQTT_WS_PORT}:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

  mysql1:
    image: mysql:8
    container_name: mysql1
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${MYSQL1_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL1_DATABASE}
      - MYSQL_USER=${MYSQL1_USER}
      - MYSQL_PASSWORD=${MYSQL1_PASSWORD}
    # REMOVIDO: command: ["--default-authentication-plugin=mysql_native_password"]
    ports:
      - "${MYSQL1_PORT}:3306"
    volumes:
      - ./mysql-data1:/var/lib/mysql
      - ./mysql-init1:/docker-entrypoint-initdb.d

  mysql2:
    image: mysql:8
    container_name: mysql2
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${MYSQL2_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL2_DATABASE}
      - MYSQL_USER=${MYSQL2_USER}
      - MYSQL_PASSWORD=${MYSQL2_PASSWORD}
    # REMOVIDO: command: ["--default-authentication-plugin=mysql_native_password"]
    ports:
      - "${MYSQL2_PORT}:3306"
    volumes:
      - ./mysql-data2:/var/lib/mysql
      - ./mysql-init2:/docker-entrypoint-initdb.d

  nodered1:
    image: nodered/node-red:latest
    container_name: nodered1
    restart: unless-stopped
    user: "1000:1000"
    environment:
      - TZ=${TZ}
    ports:
      - "${NODERED1_PORT}:1880"
    volumes:
      - ./node-red-data1:/data
    depends_on:
      - mqtt

  nodered2:
    image: nodered/node-red:latest
    container_name: nodered2
    restart: unless-stopped
    user: "1000:1000"
    environment:
      - TZ=${TZ}
    ports:
      - "${NODERED2_PORT}:1880"
    volumes:
      - ./node-red-data2:/data
    depends_on:
      - mqtt

# docker-compose.yml (servi√ßo rclone)
  rclone:
    image: rclone/rclone:latest
    container_name: rclone
    restart: unless-stopped
    network_mode: host
    environment:
      - TZ=${TZ}
    entrypoint: [ "rclone"]
    command:
      [ "rcd",
        "--rc-addr", ":${RCLONE_PORT}",
        "--rc-user", "${RCLONE_USER}",
        "--rc-pass", "${RCLONE_PASS}",
        "--rc-web-gui",
        "--rc-web-gui-no-open-browser"
      ]
    volumes:
      - ./rclone-config:/config/rclone
      - ./backups:/data


